#!/usr/bin/env python3
import argparse
import os
import sys
import zmq
from hirnoty.settings import config


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-t', dest='topic', type=str, default="log",
                        help="topic name of the queue")
    parser.add_argument('-i', dest='id', type=str, default=None,
                        help="string to identify data")
    parser.add_argument('-m', dest='msg', type=str, default=None,
                        help="Message to send (instead of stdin)")
    return parser.parse_args()


def main():
    args = parse_args()
    context = zmq.Context()
    socket = context.socket(zmq.PUSH)
    socket.connect(f'tcp://{config["CONNECT_ADDRESS"]}')
    if not args.id:
        args.id = f"{os.getpid()}"

    if args.msg:
        socket.send_multipart([args.topic.encode(),
                               f'{args.id}: {args.msg}'.encode()])
        socket.send_multipart([args.topic.encode(),
                               f'{args.id}: Finished'.encode()])
        socket.close()
        return

    while True:
        try:
            line = input()
            socket.send_multipart([args.topic.encode(),
                                   f'{args.id}: {line}'.encode()])
        except EOFError:
            socket.send_multipart([args.topic.encode(),
                                   f'{args.id}: Finished'.encode()])
            break

    socket.close()


if __name__ == "__main__":
    main()
